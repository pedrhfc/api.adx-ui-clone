image: golang:1.14.4

stages:
  #- test
  - build
  - deploy

variables:
  REPO: gitlab.com
  GROUP: baugoncalves
  PROJECT: goclass-rest-api
  IP_SERVER: "165.22.142.228"

before_script:
  - mkdir -p $GOPATH/src/$REPO/$GROUP $GOPATH/src/_/builds
  - cp -r $CI_PROJECT_DIR $GOPATH/src/$REPO/$GROUP/$PROJECT
  - ln -s $GOPATH/src/$REPO/$GROUP $GOPATH/src/_/builds/$GROUP
  - go get -v -d ./...
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - mkdir -p ~/.ssh
  - eval $(ssh-agent -s)
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

# tests-stage:
#   stage: test
#   script:
#     - go test -v ./... -coverprofile .testCoverage.txt
#   only:
#     - merge_requests
#     - master

build-stage:
  stage: build
  script:
    - GOOS=linux GOARCH=amd64 go build
  artifacts:
    paths:
      - $PROJECT
  only:
    - merge_requests
    - master

deploy-stage:
  stage: deploy
  script:
    - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 --decode)
    - scp -P4444 $PROJECT root@$IP_SERVER:/root
    - ssh -p4444 root@$IP_SERVER "mv /root/$PROJECT /var/www/html/go"
    - ssh -p2222 root@$IP_SERVER "systemctl restart goclass_rest_api.service"
  only:
    - master
